{"version":3,"sources":["../../src/Model/Args.js"],"names":["Args","constructor","params","output","domain","verbose","Object","assign","shouldShowHelp","hasOwnProperty","getSiteName","replace","getProjectPath","siteName","projectPath","filename"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA;;;AAGA,MAAMA,IAAN,CAAW;AACPC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB;;;;AAIA,SAAKC,MAAL,GAAc,IAAd;AACA;;;;;AAIA,SAAKC,MAAL,GAAc,IAAd;AACA;;;;;AAIA,SAAKC,OAAL,GAAe,IAAf;AACAC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBL,MAApB;AACH;AAED;;;;;;AAIAM,EAAAA,cAAc,GAAG;AACb,WAAO,KAAKC,cAAL,CAAoB,MAApB,KAAgC,KAAKL,MAAL,KAAgB,IAAhB,IAAwB,KAAKD,MAAL,KAAgB,IAA/E;AACH;AAED;;;;;;AAIAO,EAAAA,WAAW,GAAG;AACV,WAAO,KAAKN,MAAL,CAAYO,OAAZ,CAAoB,MAApB,EAA4B,GAA5B,CAAP;AACH;AAED;;;;;;AAIAC,EAAAA,cAAc,GAAG;AACb,QAAIC,QAAQ,GAAG,KAAKH,WAAL,EAAf;AACA,QAAII,WAAW,GAAG,gBAAK,KAAKX,MAAL,CAAYY,QAAjB,EAA2BF,QAA3B,CAAlB;;AACA,QAAI,CAAC,oBAAWC,WAAX,CAAL,EAA8B;AAC1B,yBAAUA,WAAV;AACH;;AACD,WAAOA,WAAP;AACH;;AA/CM;;eAkDId,I","sourcesContent":["import FileDetails from './FileDetails';\nimport { join } from \"path\";\nimport { existsSync, mkdirSync } from \"fs\";\n\n/**\n * Commandline arguments being passed to the app.\n */\nclass Args {\n    constructor(params) {\n        /**\n         * Project directory to output the app results.\n         * @type {FileDetails|null}\n         */\n        this.output = null;\n        /**\n         * Domain being indexed.\n         * @type {string|*}\n         */\n        this.domain = null;\n        /**\n         * Should progress information be output to the console?\n         * @type {boolean}\n         */\n        this.verbose = true;\n        Object.assign(this, params);\n    }\n\n    /**\n     * If the mandatory options are not passed then show the menu.\n     * @returns {boolean} true if the mandatory options are not passed.\n     */\n    shouldShowHelp() {\n        return this.hasOwnProperty('help') || (this.domain === null || this.output === null);\n    }\n\n    /**\n     * Get the site name from the domain.\n     * @returns {string} the site name.\n     */\n    getSiteName() {\n        return this.domain.replace(/[.]/g, '_');\n    }\n\n    /**\n     * Get the project folder which the output + the site name. Also, it will be created if it doesn't exist.\n     * @returns {string} the project path.\n     */\n    getProjectPath() {\n        let siteName = this.getSiteName();\n        let projectPath = join(this.output.filename, siteName);\n        if (!existsSync(projectPath)) {\n            mkdirSync(projectPath);\n        }\n        return projectPath;\n    }\n}\n\nexport default Args;"],"file":"Args.js"}