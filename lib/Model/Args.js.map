{"version":3,"sources":["../../src/Model/Args.js"],"names":["Args","constructor","params","Object","assign","shouldShowHelp","hasOwnProperty","domain","output","getSiteName","replace","getProjectPath","siteName","projectPath","filename"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;AAEA;;;AAGe,MAAMA,IAAN,CAAW;AACtB;;;;AAIA;;;;AAIA;;;AAKAC,EAAAA,WAAW,CAACC,MAAD,EAAc;AACrBC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBF,MAApB;AACH;AAED;;;;;;AAIAG,EAAAA,cAAc,GAAY;AACtB,WAAO,KAAKC,cAAL,CAAoB,MAApB,KAAgC,KAAKC,MAAL,KAAgB,IAAhB,IAAwB,KAAKC,MAAL,KAAgB,IAA/E;AACH;AAED;;;;;;AAIAC,EAAAA,WAAW,GAAW;AAClB,WAAO,KAAKF,MAAL,CAAYG,OAAZ,CAAoB,MAApB,EAA4B,GAA5B,CAAP;AACH;AAED;;;;;;AAIAC,EAAAA,cAAc,GAAG;AACb,QAAIC,QAAQ,GAAG,KAAKH,WAAL,EAAf;AACA,QAAII,WAAW,GAAG,gBAAK,KAAKL,MAAL,CAAYM,QAAjB,EAA2BF,QAA3B,CAAlB;;AACA,QAAI,CAAC,oBAAWC,WAAX,CAAL,EAA8B;AAC1B,yBAAUA,WAAV;AACH;;AACD,WAAOA,WAAP;AACH;;AA7CqB","sourcesContent":["// @flow\nimport FileDetails from './FileDetails';\nimport { join } from \"path\";\nimport { existsSync, mkdirSync } from \"fs\";\n\n/**\n * Commandline arguments being passed to the app.\n */\nexport default class Args {\n    /**\n     * Project directory to output the app results.\n     */\n    output: FileDetails;\n    /**\n     * Domain being indexed.\n     */\n    domain: string;\n    /**\n     * Should progress information be output to the console?\n     */\n    verbose: boolean;\n\n    constructor(params: any) {\n        Object.assign(this, params);\n    }\n\n    /**\n     * If the mandatory options are not passed then show the menu.\n     * @returns {boolean} true if the mandatory options are not passed.\n     */\n    shouldShowHelp(): boolean {\n        return this.hasOwnProperty('help') || (this.domain === null || this.output === null);\n    }\n\n    /**\n     * Get the site name from the domain.\n     * @returns {string} the site name.\n     */\n    getSiteName(): string {\n        return this.domain.replace(/[.]/g, '_');\n    }\n\n    /**\n     * Get the project folder which the output + the site name. Also, it will be created if it doesn't exist.\n     * @returns {string} the project path.\n     */\n    getProjectPath() {\n        let siteName = this.getSiteName();\n        let projectPath = join(this.output.filename, siteName);\n        if (!existsSync(projectPath)) {\n            mkdirSync(projectPath);\n        }\n        return projectPath;\n    }\n}"],"file":"Args.js"}