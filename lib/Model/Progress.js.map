{"version":3,"sources":["../../src/Model/Progress.js"],"names":["Progress","constructor","url","total","progress","working","toString","toLog","update","Url","checked","link","name","title"],"mappings":";;;;;;;AAEA;;AACA;;;;;;;;AAEA;;;AAGe,MAAMA,QAAN,CAAe;AAM1B;;;;;AAKAC,EAAAA,WAAW,CAACC,GAAD,EAAWC,KAAX,EAA0B;AACjC,SAAKD,GAAL,GAAWA,GAAX;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,QAAL,GAAgB,CAAhB;AACA,SAAKC,OAAL,GAAe,IAAf;AACH;AAED;;;;;;AAIAC,EAAAA,QAAQ,GAAG;AACP,QAAIJ,GAAG,GAAG,KAAKA,GAAL,KAAa,IAAb,GAAoB,KAAKA,GAAL,CAASA,GAA7B,GAAmC,EAA7C;AACA,WAAQ,GAAE,KAAKC,KAAM,MAAK,KAAKC,QAAS,gBAAe,KAAKC,OAAL,GAAe,SAAf,GAA2B,QAAS,MAAKH,GAAI,EAApG;AACH;AAED;;;;;;AAIAK,EAAAA,KAAK,GAAW;AACZ,WAAO;AACHJ,MAAAA,KAAK,EAAE,KAAKA,KADT;AAEHC,MAAAA,QAAQ,EAAE,KAAKA,QAFZ;AAGHC,MAAAA,OAAO,EAAE,KAAKA,OAHX;AAIHH,MAAAA,GAAG,EAAE,KAAKA,GAAL,KAAa,IAAb,GAAoB,KAAKA,GAAL,CAASA,GAA7B,GAAmC;AAJrC,KAAP;AAMH;AAED;;;;;;AAIAM,EAAAA,MAAM,CAACN,GAAD,EAAW;AACb,SAAKA,GAAL,GAAW,IAAIO,YAAJ,mBAAYP,GAAZ,EAAX;AACA,SAAKE,QAAL;AACH;AAED;;;;;;AAIAM,EAAAA,OAAO,CAACC,IAAD,EAAa;AAChB,SAAKT,GAAL,GAAW,IAAIO,YAAJ,CAAQ;AAACG,MAAAA,IAAI,EAAED,IAAI,CAACE,KAAZ;AAAmBX,MAAAA,GAAG,EAAES,IAAI,CAACT;AAA7B,KAAR,CAAX;AACA,SAAKG,OAAL,GAAeM,IAAI,CAACN,OAApB;AACH;;AAxDyB","sourcesContent":["// @flow\n\nimport Url from \"./Url\";\nimport Link from \"./Link\";\n\n/**\n * Class for reporting the progress.\n */\nexport default class Progress {\n    url: Url;\n    total: number;\n    progress: number;\n    working: boolean;\n\n    /**\n     * Build a progress object.\n     * @param url {Url|null} current url\n     * @param total {number} total urls to process.\n     */\n    constructor(url: Url, total: number) {\n        this.url = url;\n        this.total = total;\n        this.progress = 0;\n        this.working = true;\n    }\n\n    /**\n     * Display something meaning full about the progress.\n     * @returns {String}\n     */\n    toString() {\n        let url = this.url !== null ? this.url.url : '';\n        return `${this.total} | ${this.progress} :: tested - ${this.working ? 'working' : 'broken'} - ${url}`;\n    }\n\n    /**\n     * Something to report in the logs.\n     * @return {{urlsPoolLength: number, urlsLength: number, url: string}}\n     */\n    toLog(): Object {\n        return {\n            total: this.total,\n            progress: this.progress,\n            working: this.working,\n            url: this.url !== null ? this.url.url : ''\n        };\n    }\n\n    /**\n     * Update the progress.\n     * @param url {Url} that was just processed.\n     */\n    update(url: Url) {\n        this.url = new Url({...url});\n        this.progress++;\n    }\n\n    /**\n     * Just updating the url.\n     * @param link {Link} that was checked.\n     */\n    checked(link: Link) {\n        this.url = new Url({name: link.title, url: link.url});\n        this.working = link.working;\n    }\n}\n"],"file":"Progress.js"}