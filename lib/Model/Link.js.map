{"version":3,"sources":["../../src/Model/Link.js"],"names":["Link","constructor","title","url","selector","type","nodeLocation","working","isUrlValid","startsWith"],"mappings":";;;;;;;AACA;;;AAGe,MAAMA,IAAN,CAAW;AACtB;;;;AAIA;;;;AAIA;;;;AAIA;;;;;AAKA;;;;AAIA;;;AAKAC,EAAAA,WAAW,CAACC,KAAD,EAAgBC,GAAhB,EAA6BC,QAA7B,EAA+CC,IAA/C,EAA6DC,YAA7D,EAAgF;AACvF,SAAKJ,KAAL,GAAaA,KAAb;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKE,IAAL,GAAYA,IAAZ;AACA,SAAKD,QAAL,GAAgBA,QAAhB;AACA,SAAKG,OAAL,GAAe,KAAf;AACA,SAAKD,YAAL,GAAoBA,YAApB;AACH;;AAEDE,EAAAA,UAAU,GAAY;AAClB,WAAO,KAAKL,GAAL,CAASM,UAAT,CAAoB,UAApB,KAAmC,KAAKN,GAAL,CAASM,UAAT,CAAoB,SAApB,CAA1C;AACH;;AAtCqB","sourcesContent":["// @flow\n/**\n * Url found on the site.\n */\nexport default class Link {\n    /**\n     * Kind of like a id for file names and look up.\n     */\n    title: string;\n    /**\n     * Full url found on the site.\n     */\n    url: string;\n    /**\n     * What type of element are we checking?\n     */\n    type: string;\n    /**\n     * Selector to find the url\n     * @type {string}\n     */\n    selector: string;\n    /**\n     * Is the link working?\n     */\n    working: boolean;\n    /**\n     * Node location information\n     */\n    nodeLocation: any;\n\n    constructor(title: string, url: string, selector: string, type: string, nodeLocation: any) {\n        this.title = title;\n        this.url = url;\n        this.type = type;\n        this.selector = selector;\n        this.working = false;\n        this.nodeLocation = nodeLocation;\n    }\n\n    isUrlValid(): boolean {\n        return this.url.startsWith(\"https://\") || this.url.startsWith(\"http://\");\n    }\n}\n"],"file":"Link.js"}