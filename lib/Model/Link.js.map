{"version":3,"sources":["../../src/Model/Link.js"],"names":["Link","constructor","title","url","selector","type","nodeLocation","working","isUrlValid","startsWith"],"mappings":";;;;;;;AAAA;;;AAGe,MAAMA,IAAN,CAAW;AACxBC,EAAAA,WAAW,CAACC,KAAD,EAAQC,GAAR,EAAaC,QAAb,EAAuBC,IAAvB,EAA6BC,YAA7B,EAA2C;AACpD;;;;AAIA,SAAKJ,KAAL,GAAaA,KAAb;AACA;;;;;AAIA,SAAKC,GAAL,GAAWA,GAAX;AACA;;;;;AAIA,SAAKE,IAAL,GAAYA,IAAZ;AACA;;;;;AAIA,SAAKD,QAAL,GAAgBA,QAAhB;AACA;;;;;AAIA,SAAKG,OAAL,GAAe,KAAf;AACA;;;;;AAIA,SAAKD,YAAL,GAAoBA,YAApB;AACD;;AAEDE,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKL,GAAL,CAASM,UAAT,CAAoB,UAApB,KAAmC,KAAKN,GAAL,CAASM,UAAT,CAAoB,SAApB,CAA1C;AACD;;AApCuB","sourcesContent":["/**\n * Url found on the site.\n */\nexport default class Link {\n  constructor(title, url, selector, type, nodeLocation) {\n    /**\n     * Kind of like a id for file names and look up.\n     * @type {string}\n     */\n    this.title = title;\n    /**\n     * Full url found on the site.\n     * @type {string}\n     */\n    this.url = url;\n    /**\n     * What type of element are we checking?\n     * @type {string}\n     */\n    this.type = type;\n    /**\n     * Selector to find the url\n     * @type {string}\n     */\n    this.selector = selector;\n    /**\n     * Is the link working?\n     * @type {boolean}\n     */\n    this.working = false;\n    /**\n     * Node location information\n     * @type {object}\n     */\n    this.nodeLocation = nodeLocation;\n  }\n\n  isUrlValid() {\n    return this.url.startsWith(\"https://\") || this.url.startsWith(\"http://\");\n  }\n}\n"],"file":"Link.js"}