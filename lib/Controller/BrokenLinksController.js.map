{"version":3,"sources":["../../src/Controller/BrokenLinksController.js"],"names":["BrokenLinksController","constructor","args","logger","Logger","start","Promise","resolve","reject","output","doesFolderExist","brokenLinksService","BrokenLinksService","on","progress","report","toLog","verbose","console","log","toString","then","catch","e"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEe,MAAMA,qBAAN,CAA4B;AAEvCC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAc,IAAIC,eAAJ,CAAWF,IAAX,CAAd;AACH;AAED;;;;;;AAIAG,EAAAA,KAAK,GAAG;AACJ,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,WAAKN,IAAL,CAAUO,MAAV,CAAiBC,eAAjB;AACA,UAAIC,kBAAkB,GAAG,IAAIC,2BAAJ,CAAuB,KAAKV,IAA5B,CAAzB;AACAS,MAAAA,kBAAkB,CAACE,EAAnB,CAAsB,OAAtB,EAA+BC,QAAQ,IAAI;AACvC,aAAKX,MAAL,CAAYY,MAAZ,CAAmBD,QAAQ,CAACE,KAAT,EAAnB;;AACA,YAAI,KAAKd,IAAL,CAAUe,OAAd,EAAuB;AACnBC,UAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,QAAT,EAAZ;AACH;AACJ,OALD,EAKGP,EALH,CAKM,UALN,EAKkBC,QAAQ,IAAI;AAC1B,aAAKX,MAAL,CAAYY,MAAZ,CAAmBD,QAAQ,CAACE,KAAT,EAAnB;;AACA,YAAI,KAAKd,IAAL,CAAUe,OAAd,EAAuB;AACnBC,UAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,QAAT,EAAZ;AACH;AACJ,OAVD,EAUGP,EAVH,CAUM,UAVN,EAUkBC,QAAQ,IAAI;AAC1B,aAAKX,MAAL,CAAYY,MAAZ,CAAmBD,QAAQ,CAACE,KAAT,EAAnB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,QAAT,EAAZ;AACH,OAbD;AAcAT,MAAAA,kBAAkB,CAACN,KAAnB,GACKgB,IADL,CACU,MAAMd,OAAO,EADvB,EAEKe,KAFL,CAEWC,CAAC,IAAIf,MAAM,CAACe,CAAD,CAFtB;AAGH,KApBM,CAAP;AAqBH;;AAjCsC","sourcesContent":["import BrokenLinksService from '../Service/BrokenLinksService';\nimport Logger from '../Utility/Logger';\n\nexport default class BrokenLinksController {\n\n    constructor(args) {\n        this.args = args;\n        this.logger = new Logger(args);\n    }\n\n    /**\n     * @Todo: Finished but did not exit.\n     * @returns {Promise}\n     */\n    start() {\n        return new Promise((resolve, reject) => {\n            this.args.output.doesFolderExist();\n            let brokenLinksService = new BrokenLinksService(this.args);\n            brokenLinksService.on('start', progress => {\n                this.logger.report(progress.toLog());\n                if (this.args.verbose) {\n                    console.log(progress.toString());\n                }\n            }).on('progress', progress => {\n                this.logger.report(progress.toLog());\n                if (this.args.verbose) {\n                    console.log(progress.toString());\n                }\n            }).on('complete', progress => {\n                this.logger.report(progress.toLog());\n                console.log(progress.toString());\n            });\n            brokenLinksService.start()\n                .then(() => resolve())\n                .catch(e => reject(e));\n        });\n    }\n}\n"],"file":"BrokenLinksController.js"}