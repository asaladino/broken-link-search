{"version":3,"sources":["../../src/Service/BrokenLinksService.js"],"names":["JSDOM","jsdom","BrokenLinksService","constructor","args","events","Map","start","urlsRepository","UrlsRepository","brokenLinksRepository","BrokenLinksRepository","htmlRepository","HtmlRepository","getProjectPath","linksCheckedRepository","LinksCheckedRepository","emitComplete","Progress","urls","findAll","filter","url","folder","name","progress","length","emitStart","file","dom","fromFile","includeNodeLocations","links","window","document","querySelectorAll","element","link","Link","title","innerHTML","href","getSelector","nodeLocation","addCheckedLink","isUrlValid","checked","emitProgress","images","alt","src","save","clearLinks","update","close","linkedChecked","find","working","addLink","e","console","log","LinkChecked","el","i","s","t","parentNode","id","unshift","ownerDocument","documentElement","body","tagName","toLowerCase","previousElementSibling","join","on","event","callback","set","forEach"],"mappings":"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","sourcesContent":["import UrlsRepository from '../Repository/UrlsRepository';\nimport HtmlRepository from '../Repository/HtmlRepository';\nimport Progress from '../Model/Progress';\nimport Url from '../Model/Url';\nimport Link from '../Model/Link';\nimport LinkChecked from '../Model/LinkChecked';\nimport isLinkWorking from '../Utility/IsLinkWorking';\n\nimport jsdom from \"jsdom\";\nconst {JSDOM} = jsdom;\n\nimport BrokenLinksRepository from '../Repository/BrokenLinksRepository';\nimport LinksCheckedRepository from '../Repository/LinksCheckedRepository';\nimport { existsSync } from 'fs';\nimport { join } from \"path\";\n\nclass BrokenLinksService {\n\n    constructor(args) {\n        this.args = args;\n        this.events = new Map();\n    }\n\n    async start() {\n        // Load the urls to test.\n        let urlsRepository = new UrlsRepository(this.args);\n        let brokenLinksRepository = new BrokenLinksRepository(this.args);\n        let htmlRepository = new HtmlRepository(this.args.getProjectPath());\n        this.linksCheckedRepository = new LinksCheckedRepository(this.args);\n        this.emitComplete(new Progress(null, 0));\n\n        let urls = urlsRepository.findAll().filter(url => {\n            return !existsSync(join(brokenLinksRepository.folder, url.name + '.json'));\n        });\n\n        let progress = new Progress(null, urls.length);\n\n        this.emitStart(progress);\n        for (let url of urls) {\n            const file = htmlRepository.file(url);\n            const dom = await JSDOM.fromFile(file, {url: url.url, includeNodeLocations: true});\n            const links = dom.window.document.querySelectorAll(\"a\");\n            for (let element of links) {\n                let link = new Link(element.title || element.innerHTML, element.href, BrokenLinksService.getSelector(element), 'a', dom.nodeLocation(element));\n                await this.addCheckedLink(link, url);\n                if (link.isUrlValid()) {\n                    progress.checked(link);\n                    this.emitProgress(progress);\n                }\n            }\n            const images = dom.window.document.querySelectorAll(\"img\");\n            for (let element of images) {\n                let link = new Link(element.alt, element.src, BrokenLinksService.getSelector(element), 'img', dom.nodeLocation(element));\n                await this.addCheckedLink(link, url);\n                if (link.isUrlValid()) {\n                    progress.checked(link);\n                    this.emitProgress(progress);\n                }\n            }\n            brokenLinksRepository.save(url);\n            url.clearLinks();\n            progress.update(url);\n            this.emitProgress(progress);\n        }\n        this.linksCheckedRepository.close();\n        this.emitComplete(progress);\n    }\n\n    async addCheckedLink(link, url) {\n        if (link.isUrlValid()) {\n            let linkedChecked = this.linksCheckedRepository.find(link);\n            if (linkedChecked) {\n                link.working = linkedChecked.working;\n                url.addLink(link);\n            } else {\n                try {\n                    link.working = await isLinkWorking(link.url);\n                } catch (e) {\n                    console.log(e);\n                }\n                url.addLink(link);\n                this.linksCheckedRepository.save(new LinkChecked(link));\n            }\n        }\n    }\n\n    /**\n     * @module getSelector\n     * @description Generates a unique CSS selector that will match only the passed element.\n     *\n     * @param {Element} el - target element\n     * @return {(string|boolean)} CSS selector that will return only the passed element, false if element is not valid\n     */\n    static getSelector(el) {\n        // Iterator for nth-child loop\n        let i = null;\n        // Query parts collection\n        const s = [];\n        // Current element's tag name\n        let t = null;\n        // Iterate through the element's ancestors\n        while (el.parentNode) {\n            // If element has ID, we're done -\n            // build selector from all previous parts\n            if (el.id) {\n                s.unshift('#' + el.id);\n                break;\n            } else {\n                // Reached the body or html tag -\n                // add the tag to the parts collection\n                if (el === el.ownerDocument.documentElement ||\n                    el === el.ownerDocument.body) {\n                    s.unshift(el.tagName.toLowerCase());\n                    // Get the element's position amongst its\n                    // siblings to build an \"nth-child\" selector\n                } else {\n                    // Grab tagName before iterating through\n                    // siblings in case there is mixed ancestry\n                    t = el.tagName.toLowerCase();\n                    for (i = 1; el.previousElementSibling; i++) {\n                        el = el.previousElementSibling;\n                    }\n                    s.unshift(t + ':nth-child(' + i + ')');\n                }\n                // Repeat for parent\n                el = el.parentNode;\n            }\n        }\n        // Return all parts, joined\n        return s.join(' > ');\n    }\n\n    /**\n     * Receive event information.\n     * @param event {string} name of the event. (start, progress, and complete)\n     * @param callback {Function} called when the event is emitted.\n     * @returns {BrokenLinksService} for chaining.\n     */\n    on(event, callback) {\n        this.events.set(event, callback);\n        return this;\n    }\n\n    /**\n     * Emits that start event.\n     * @param progress {Progress} found at start.\n     */\n    emitStart(progress) {\n        this.events.forEach((callback, event) => {\n            if (event === 'start') {\n                callback(progress);\n            }\n        });\n    }\n\n    /**\n     * Emits that progress event.\n     * @param progress {Progress} that is currently having its content extracted from.\n     */\n    emitProgress(progress) {\n        this.events.forEach((callback, event) => {\n            if (event === 'progress') {\n                callback(progress);\n            }\n        });\n    }\n\n    /**\n     * Emits that complete event when service has finished.\n     * @param progress {Progress} that is currently having its content extracted from.\n     */\n    emitComplete(progress) {\n        this.events.forEach((callback, event) => {\n            if (event === 'complete') {\n                callback(progress);\n            }\n        });\n    }\n}\n\nexport default BrokenLinksService;"],"file":"BrokenLinksService.js"}